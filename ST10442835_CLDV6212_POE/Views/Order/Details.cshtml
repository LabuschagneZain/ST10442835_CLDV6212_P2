@model ST10442835_CLDV6212_POE.Models.Order
@{
    ViewData["Title"] = "Order Details";
}

<style>
    body {
        background-color: #0d0d0d;
        color: #e0e0e0;
    }

    .card {
        background-color: #1a1a1a;
        border: 1px solid #444;
        color: #e0e0e0;
    }

    .card-header {
        background-color: #222;
        border-bottom: 1px solid #444;
        color: #e0e0e0;
    }

    .btn-primary {
        background-color: #1a1a1a;
        border: 1px solid #a0d8ff;
        color: #a0d8ff;
        font-weight: 600;
    }

        .btn-primary:hover {
            background-color: #a0d8ff;
            color: #0d0d0d;
        }

    .btn-secondary {
        background-color: #1a1a1a;
        border: 1px solid #6c757d;
        color: #e0e0e0;
    }

        .btn-secondary:hover {
            background-color: #6c757d;
            color: #0d0d0d;
        }

    .text-muted {
        color: #aaa !important;
    }

    .text-success {
        color: #28a745 !important;
    }

    /* Status Badges */
    .badge {
        font-size: 0.9rem;
        padding: 0.5em 0.8em;
        border-radius: 6px;
    }

    .bg-primary {
        background-color: #a0d8ff !important;
        color: #0d0d0d;
    }

    .bg-info {
        background-color: #5bc0de !important;
        color: #0d0d0d;
    }

    .bg-success {
        background-color: #28a745 !important;
        color: #fff;
    }

    .bg-danger {
        background-color: #888 !important;
        color: #0d0d0d;
    }

    .bg-secondary {
        background-color: #6c757d !important;
        color: #fff;
    }

    i.fas {
        color: #a0d8ff;
    }

    hr {
        border-color: #444;
    }
</style>

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-receipt"></i> Order Details</h2>
    <div>
        <a asp-action="Edit" asp-route-id="@Model.RowKey" class="btn btn-primary">
            <i class="fas fa-edit"></i> Edit
        </a>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-list"></i> Back to List
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card shadow">
            <div class="card-header">
                <h5 class="card-title mb-0"><i class="fas fa-info-circle"></i> Order Information</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <p><strong>Order ID:</strong></p>
                        <p class="text-muted"><code>@Model.OrderId</code></p>

                        <p><strong>Customer ID:</strong></p>
                        <p class="text-muted"><small>@Model.CustomerId</small></p>

                        <p><strong>Product Name:</strong></p>
                        <p class="text-muted">@Model.ProductName</p>

                        <p><strong>Product ID:</strong></p>
                        <p class="text-muted"><small>@Model.ProductId</small></p>
                    </div>
                    <div class="col-md-6">
                        <p><strong>Order Date:</strong></p>
                        <p class="text-muted">@Model.OrderDateUtc.ToString("MMMM dd, yyyy")</p>

                        <p><strong>Quantity:</strong></p>
                        <p class="text-muted">@Model.Quantity</p>

                        <p><strong>Status:</strong></p>
                        <p>
                            @{
                                string GetStatusBadgeClass(string status) => status?.ToLower() switch
                                {
                                    "submitted" => "primary",
                                    "processing" => "info",
                                    "completed" => "success",
                                    "cancelled" => "danger",
                                    _ => "secondary"
                                };
                            }
                            <span class="badge bg-@(GetStatusBadgeClass(Model.Status)) fs-6">
                                @Model.Status
                            </span>
                        </p>

                        <p><strong>Last Updated:</strong></p>
                        <p class="text-muted">@Model.OrderDateUtc.ToString("MMM dd, yyyy HH:mm")</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Status History Card -->
        <div class="card mt-4 shadow">
            <div class="card-header">
                <h6 class="card-title mb-0"><i class="fas fa-history"></i> Order Status</h6>
            </div>
            <div class="card-body">
                <div class="timeline">
                    <div class="timeline-item @(Model.Status == "Submitted" ? "active" : "")">
                        <div class="timeline-marker bg-primary"></div>
                        <div class="timeline-content">
                            <h6>Submitted</h6>
                            <small class="text-muted">Order was placed</small>
                        </div>
                    </div>
                    <div class="timeline-item @(Model.Status == "Processing" ? "active" : "") @(Model.Status == "Completed" || Model.Status == "Cancelled" ? "completed" : "")">
                        <div class="timeline-marker bg-info"></div>
                        <div class="timeline-content">
                            <h6>Processing</h6>
                            <small class="text-muted">Order is being processed</small>
                        </div>
                    </div>
                    <div class="timeline-item @(Model.Status == "Completed" ? "active" : "")">
                        <div class="timeline-marker bg-success"></div>
                        <div class="timeline-content">
                            <h6>Completed</h6>
                            <small class="text-muted">Order was completed</small>
                        </div>
                    </div>
                    <div class="timeline-item @(Model.Status == "Cancelled" ? "active" : "")">
                        <div class="timeline-marker bg-danger"></div>
                        <div class="timeline-content">
                            <h6>Cancelled</h6>
                            <small class="text-muted">Order was cancelled</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <!-- Pricing Card -->
        <div class="card shadow">
            <div class="card-header">
                <h6 class="card-title mb-0"><i class="fas fa-money-bill-wave"></i> Pricing Details</h6>
            </div>
            <div class="card-body">
                <div class="d-flex justify-content-between mb-2">
                    <span>Unit Price:</span>
                    <span>@Model.UnitPrice.ToString("C")</span>
                </div>
                <div class="d-flex justify-content-between mb-2">
                    <span>Quantity:</span>
                    <span>@Model.Quantity</span>
                </div>
                <hr>
                <div class="d-flex justify-content-between">
                    <strong>Total Price:</strong>
                    <strong class="text-success fs-5">@Model.TotalPrice.ToString("C")</strong>
                </div>
            </div>
        </div>

        <!-- System Information Card -->
        <div class="card mt-4 shadow">
            <div class="card-header">
                <h6 class="card-title mb-0"><i class="fas fa-database"></i> System Information</h6>
            </div>
            <div class="card-body">
                <p><strong>Created:</strong></p>
                <p class="text-muted small">@Model.Timestamp?.ToString("MMM dd, yyyy HH:mm")</p>

                <p><strong>Partition Key:</strong></p>
                <p class="text-muted small"><code>@Model.PartitionKey</code></p>

                <p><strong>Row Key:</strong></p>
                <p class="text-muted small"><code>@Model.RowKey</code></p>

                @if (Model.ETag != null)
                {
                    <p><strong>ETag:</strong></p>
                    <p class="text-muted small"><code>@Model.ETag.ToString().Substring(0, 20)...</code></p>
                }
            </div>
        </div>

        <!-- Quick Actions Card -->
        <div class="card mt-4 shadow">
            <div class="card-header">
                <h6 class="card-title mb-0"><i class="fas fa-bolt"></i> Quick Actions</h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    @if (Model.Status != "Completed" && Model.Status != "Cancelled")
                    {
                        <button type="button" class="btn btn-outline-info btn-sm" onclick="updateStatus('Processing')">
                            <i class="fas fa-cog"></i> Mark as Processing
                        </button>
                    }
                    @if (Model.Status == "Processing")
                    {
                        <button type="button" class="btn btn-outline-success btn-sm" onclick="updateStatus('Completed')">
                            <i class="fas fa-check"></i> Mark as Completed
                        </button>
                    }
                    @if (Model.Status != "Completed" && Model.Status != "Cancelled")
                    {
                        <button type="button" class="btn btn-outline-danger btn-sm" onclick="updateStatus('Cancelled')">
                            <i class="fas fa-times"></i> Cancel Order
                        </button>
                    }
                    <a href="@Url.Action("Edit", new { id = Model.RowKey })" class="btn btn-outline-primary btn-sm">
                        <i class="fas fa-edit"></i> Edit Details
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateStatus(newStatus) {
            if (!newStatus) return;

            const confirmMessage = newStatus === 'Cancelled'
                ? 'Are you sure you want to cancel this order? This action cannot be undone.'
                : `Are you sure you want to change the status to "${newStatus}"?`;

            if (confirm(confirmMessage)) {
                fetch('/Order/UpdateOrderStatus', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ id: '@Model.RowKey', newStatus: newStatus })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload();
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while updating the status');
                });
            }
        }
    </script>

    <style>
        .timeline {
            position: relative;
            padding-left: 30px;
        }

        .timeline-item {
            position: relative;
            margin-bottom: 20px;
        }

        .timeline-marker {
            position: absolute;
            left: -30px;
            top: 0;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            text-align: center;
            line-height: 20px;
            font-size: 12px;
        }

        .timeline-content {
            padding-left: 10px;
        }

        .timeline-item.active .timeline-content h6 {
            color: #a0d8ff;
            font-weight: bold;
        }

        .timeline-item.completed .timeline-content {
            opacity: 0.7;
        }

        .timeline-item:not(:last-child)::after {
            content: '';
            position: absolute;
            left: -21px;
            top: 20px;
            bottom: -20px;
            width: 2px;
            background-color: #444;
        }
    </style>
}