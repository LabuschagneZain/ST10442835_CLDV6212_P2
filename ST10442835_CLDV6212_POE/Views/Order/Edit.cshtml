@model ST10442835_CLDV6212_POE.Models.Order
@{
    ViewData["Title"] = "Edit Order";
}

<h2><i class="fas fa-edit"></i> Edit Order</h2>

<div class="row">
    <div class="col-md-8">
        <form asp-action="Edit" method="post">
            <input type="hidden" asp-for="RowKey" />
            <input type="hidden" asp-for="PartitionKey" />
            <input type="hidden" name="etagValue" value="@Model.ETag.ToString()" />
            <input type="hidden" asp-for="Timestamp" />
            <input type="hidden" asp-for="CustomerId" />
            <input type="hidden" asp-for="ProductId" />
            <input type="hidden" asp-for="UnitPrice" />
            <!-- Remove TotalPrice hidden field since it's computed -->
            <input type="hidden" asp-for="ProductName" />

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="form-label">Order ID</label>
                        <input type="text" class="form-control" value="@Model.OrderId" readonly />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="form-label">Customer ID</label>
                        <input type="text" class="form-control" value="@Model.CustomerId" readonly />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="form-label">Product</label>
                        <input type="text" class="form-control" value="@Model.ProductName" readonly />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="form-label">Product ID</label>
                        <input type="text" class="form-control" value="@Model.ProductId" readonly />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="OrderDateUtc" class="form-label">Order Date</label>
                        <input asp-for="OrderDateUtc" class="form-control" type="date" />
                        <span asp-validation-for="OrderDateUtc" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="Quantity" class="form-label">Quantity</label>
                        <input asp-for="Quantity" class="form-control" type="number" min="1" readonly />
                        <div class="form-text">Quantity cannot be changed after order creation</div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="form-label">Unit Price</label>
                        <input type="text" class="form-control" value="@Model.UnitPrice.ToString("C")" readonly />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="form-label">Total Price</label>
                        <input type="text" class="form-control" value="@Model.TotalPrice.ToString("C")" readonly />
                    </div>
                </div>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Status" class="form-label">Status</label>
                <select asp-for="Status" class="form-select">
                    <option value="Submitted" selected="@(Model.Status == "Submitted")">Submitted</option>
                    <option value="Processing" selected="@(Model.Status == "Processing")">Processing</option>
                    <option value="Completed" selected="@(Model.Status == "Completed")">Completed</option>
                    <option value="Cancelled" selected="@(Model.Status == "Cancelled")">Cancelled</option>
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Update Order
                </button>
                <a asp-action="Details" asp-route-id="@Model.RowKey" class="btn btn-info">
                    <i class="fas fa-eye"></i> View Details
                </a>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-times"></i> Cancel
                </a>
            </div>
        </form>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h6 class="card-title mb-0"><i class="fas fa-info-circle"></i> Order Summary</h6>
            </div>
            <div class="card-body">
                <p>
                    <strong>Order ID:</strong><br />
                    <small class="text-muted">@Model.OrderId</small>
                </p>

                <p>
                    <strong>Created:</strong><br />
                    <small class="text-muted">@Model.Timestamp?.ToString("MMM dd, yyyy HH:mm")</small>
                </p>

                <p>
                    <strong>Last Updated:</strong><br />
                    <small class="text-muted">@Model.OrderDateUtc.ToString("MMM dd, yyyy HH:mm")</small>
                </p>

                <p>
                    <strong>Current Status:</strong><br />
                    <span class="badge bg-@(GetStatusBadgeClass(Model.Status))">@Model.Status</span>
                </p>

                <hr>

                <div class="row">
                    <div class="col-6"><strong>Quantity:</strong></div>
                    <div class="col-6 text-end">@Model.Quantity</div>
                </div>
                <div class="row">
                    <div class="col-6"><strong>Unit Price:</strong></div>
                    <div class="col-6 text-end">@Model.UnitPrice.ToString("C")</div>
                </div>
                <div class="row">
                    <div class="col-6"><strong>Total:</strong></div>
                    <div class="col-6 text-end"><span class="text-success fw-bold">@Model.TotalPrice.ToString("C")</span></div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "submitted" => "primary",
            "processing" => "info",
            "completed" => "success",
            "cancelled" => "danger",
            _ => "secondary"
        };
    }
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Format the date for the date input
            const orderDateInput = document.querySelector('input[name="OrderDateUtc"]');
            if (orderDateInput && orderDateInput.value) {
                const date = new Date(orderDateInput.value);
                const formattedDate = date.toISOString().split('T')[0];
                orderDateInput.value = formattedDate;
            }

            // Add confirmation for status changes to Cancelled
            const statusSelect = document.querySelector('select[name="Status"]');
            statusSelect.addEventListener('change', function() {
                if (this.value === 'Cancelled') {
                    if (!confirm('Are you sure you want to cancel this order? This action cannot be undone.')) {
                        this.value = '@Model.Status';
                    }
                }
            });
        });
    </script>
}